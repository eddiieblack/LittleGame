{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","start","update","dt","gameOver","gainScore","string","toString","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n         // 这个属性引用了星星预制资源\n         starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n         // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n         // 得分音效资源\n         scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad:function () {\n          // 获取地平面的 y 轴坐标\n          this.groundY = this.ground.y + this.ground.height/2;\n          // 初始化计时器\n          this.timer = 0;\n          this.starDuration = 0;\n        \n          // 生成一个新的星星\n          this.spawnNewStar();\n           // 初始化计分\n        this.score = 0;\n    },\n  \n    spawnNewStar: function() {\n          // 使用给定的模板在场景中生成一个新节点\n          var newStar = cc.instantiate(this.starPrefab);\n          // 将新增的节点添加到 Canvas 节点下面\n          this.node.addChild(newStar);\n          // 为星星设置一个随机位置\n          newStar.setPosition(this.getNewStarPosition());\n           // 将 Game 组件的实例传入星星组件\n          newStar.getComponent('Star').game = this;\n          // 重置计时器，根据消失时间范围随机取一个值\n         this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n         this.timer = 0;\n    },\n  \n    getNewStarPosition: function () {\n          var randX = 0;\n          // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n          var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n          // 根据屏幕宽度，随机得到一个星星 x 坐标\n          var maxX = this.node.width/2;\n          randX = cc.randomMinus1To1() * maxX;\n          // 返回星星坐标\n          return cc.p(randX, randY);\n    },\n\n    start () {\n\n    },\n\n    update:function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    gameOver: function () {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        cc.director.loadScene('game');\n    }\n});\n"]}